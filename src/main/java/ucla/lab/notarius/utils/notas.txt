       Estudiante estudianteInscribiendo = persistenceService.estudiante.findEstudianteWithCedula("1234567890");
        List<Seccion> seccionesAInscribir = (List)new ArrayList<Seccion>();
        System.out.println(estudianteInscribiendo.toString());
        
        //Listar secciones disponibles segun la carrera y el semestre
        for (Seccion seccionDisponible : estudianteInscribiendo.getSeccionesDisponibles()) {
            //escoger las secciones, en este caso solo las de indice impar
                seccionesAInscribir.add(seccionDisponible);
            
        }
        
        Inscripcion estudianteInscripcion = new Inscripcion();
        
        estudianteInscripcion.setCarrera(estudianteInscribiendo.getCarrera());
        estudianteInscripcion.setDecanato(estudianteInscribiendo.getCarrera().getDecanato());
        estudianteInscripcion.setEstudiante(estudianteInscribiendo);
        estudianteInscripcion.setPeriodo(persistenceService.periodoAcademico.findLastPeriodo());
        estudianteInscripcion.setSecciones(seccionesAInscribir);
        estudianteInscripcion.setSemestre(estudianteInscribiendo.getSemestre());

        try {
             persistenceService.inscripcion.create(estudianteInscripcion);
            List<Inscripcion> inscripciones = persistenceService.inscripcion.findInscripcionEntities();
            for (Inscripcion i : inscripciones) {
                System.out.println(i.getSecciones().toString());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        
     